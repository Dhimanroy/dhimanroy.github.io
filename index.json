[{"categories":null,"contents":"Python script for calculating average drag coefficient\r#========================================== # Title: Average drag coefficient calculator # Author: Dhiman Roy, ME-14, BUET # Date: March 28, 2021 # Licensed under Creative Commons. #========================================== import os os.chdir(os.path.dirname(os.path.abspath(__file__))) pardir = os.path.abspath(os.path.join(__file__, os.pardir)) resFilePath = \u0026#34;G:\\Sumlation Results (Dhiman)\u0026#34; def askToChange(parameter, val): print(\u0026#34;%sis set to %f\u0026#34; %(parameter, val)) prompt = input(\u0026#34;Do you want to change? (Y/N): \u0026#34;) if prompt == \u0026#39;y\u0026#39; or prompt == \u0026#39;Y\u0026#39;: val = input(\u0026#34;Enter new value for %s: \u0026#34; %parameter) elif prompt == \u0026#39;n\u0026#39; or prompt == \u0026#39;N\u0026#39;: val = val else: val = val #askToChange(\u0026#34;Frontal Area\u0026#34;, frontalArea) return float(val) try: #Edit getValueFrom = 1000 #Start Claculation from getValueTo = 5000 #Upto which iteration linesInHeader = 2 #number of lines as header frontalArea = 0.74882341 #0.83443312 FOR SHIELD frontalArea = askToChange(\u0026#34;Frontal Area\u0026#34;, frontalArea) density = 1.225 velocity = float(input(\u0026#34;Enter velocity (m/s): \u0026#34;)) #Think_before_making_any_change linesToSkip = getValueFrom + linesInHeader - 1 file = open(\u0026#34;cd-biker\u0026#34;, \u0026#34;r\u0026#34;) contents = file.readlines()[linesToSkip:(getValueTo + linesInHeader)] iter = [] cd_each_iter = [] #simpson = [] i = 0 sum = 0 for line in contents: splitline = line.split(\u0026#34; \u0026#34;) iter.append(float(splitline[0])) cd_each_iter.append(float(splitline[1])) #print(len(iter)) while i\u0026lt;len(iter) - 2: integral = (1 / 3) * (cd_each_iter[i] + 4 * cd_each_iter[i+1] + cd_each_iter[i+2]) sum = sum + integral #simpson.append(integral) i = i + 2 avg_cd = sum / (iter[len(iter) - 1] - iter[0]) dragForce = 0.5 * avg_cd * density * frontalArea * velocity * velocity #print(\u0026#34;Sum is\u0026#34;, sum) #print(iter) #print(cd_each_iter) #print(simpson) #print(sum) msg = \u0026#34;\u0026#34;.join([\u0026#34;Average drag coefficient (from iteration \u0026#34;, str(getValueFrom), \u0026#34; to iteration \u0026#34;, str(getValueTo),\u0026#34;) is \u0026#34;, str(avg_cd), \u0026#34; and drag on bike is \u0026#34;, str(dragForce), \u0026#34; N\\n\u0026#34;]) #print(\u0026#34;Average drag coefficient from (iteration \u0026#34;, getValueFrom, \u0026#34; to iteration \u0026#34;, getValueTo,\u0026#34;) is \u0026#34;, avg_cd,sep=\u0026#34;\u0026#34;) print(\u0026#34;\\n******************************************************************************\\n\u0026#34;, msg) try: savefile = open(\u0026#34;avgerage_cd.txt\u0026#34;, \u0026#34;a\u0026#34;) savefile.write(msg) print(\u0026#34; Data stored!!\\n******************************************************************************\\n\u0026#34;) except IOError: print(\u0026#34;Couldn\u0026#39;t open file to save!\u0026#34;) finally: if \u0026#34;savefile\u0026#34; in locals(): savefile.close() except IOError: print(\u0026#34;Couldn\u0026#39;t open file!\u0026#34;) finally: if \u0026#34;file\u0026#34; in locals(): file.close() def writeAllRes(): try: res = \u0026#34;\u0026#34;.join([pardir, \u0026#34;,\u0026#34;, str(avg_cd), \u0026#34;,\u0026#34;, str(dragForce), \u0026#34;\\n\u0026#34;]) allResultToFile = open(resFilePath + \u0026#34;\\All-Simulation_Result.csv\u0026#34;, \u0026#34;a\u0026#34;) allResultToFile.write(res) print(\u0026#39;Allres saved\u0026#39;) except IOError: print(\u0026#34;Couldn\u0026#39;t open \u0026#39;All-Simulation_Result.csv\u0026#39; to store data!\u0026#34;) finally: if \u0026#34;allResultToFile\u0026#34; in locals(): allResultToFile.close() try: os.mkdir(resFilePath) print(\u0026#39;Directory \u0026#39;) writeAllRes() except: writeAllRes() input(\u0026#34;Hit Enter to exit..........\\n\u0026#34;) \r\r\r\r","date":"March 28, 2021","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/python-scripts/for-calculating-average-drag/","summary":"Python script for calculating average drag coefficient\r#========================================== # Title: Average drag coefficient calculator # Author: Dhiman Roy, ME-14, BUET # Date: March 28, 2021 # Licensed under Creative Commons. #========================================== import os os.chdir(os.path.dirname(os.path.abspath(__file__))) pardir = os.path.abspath(os.path.join(__file__, os.pardir)) resFilePath = \u0026#34;G:\\Sumlation Results (Dhiman)\u0026#34; def askToChange(parameter, val): print(\u0026#34;%sis set to %f\u0026#34; %(parameter, val)) prompt = input(\u0026#34;Do you want to change? (Y/N): \u0026#34;) if prompt == \u0026#39;y\u0026#39; or prompt == \u0026#39;Y\u0026#39;: val = input(\u0026#34;Enter new value for %s: \u0026#34; %parameter) elif prompt == \u0026#39;n\u0026#39; or prompt == \u0026#39;N\u0026#39;: val = val else: val = val #askToChange(\u0026#34;Frontal Area\u0026#34;, frontalArea) return float(val) try: #Edit getValueFrom = 1000 #Start Claculation from getValueTo = 5000 #Upto which iteration linesInHeader = 2 #number of lines as header frontalArea = 0.","tags":null,"title":"Python script for calculating average drag coefficient"},{"categories":null,"contents":"Bash codes for custom commands\ralias goto=\u0026#39;/mnt/c/Program\\ Files/Opera/launcher.exe\u0026#39; #alias search=\u0026#39;goto www.google.com/search?q=\u0026#39; g() { search=\u0026#34;\u0026#34; echo \u0026#34;Googling: $@\u0026#34; for term in $@; do search=\u0026#34;$search%20$term\u0026#34; done search=${search/\\%20/} goto http://www.google.com/search?q=$search } y(){ sea=\u0026#34;\u0026#34; echo \u0026#34;Searching in Youtube: $@\u0026#34; for term in $@; do sea=\u0026#34;$sea+$term\u0026#34; done sea=${sea/\\+/} goto https://www.youtube.com/results?search_query=$sea } alias km=\u0026#39;/mnt/c/Program\\ Files/KMPlayer/KMPlayer.exe\u0026#39; op(){ nil=\u0026#34;\u0026#34; dmn=\u0026#34;\u0026#34; sl=\u0026#34;/\u0026#34; file=\u0026#34;file:///\u0026#34; col=\u0026#34;:/\u0026#34; loc=$(pwd) link=${loc/\\/mnt\\//$nil} base=$(removebackslash $@) for term in $link$sl$base; do dmn=\u0026#34;$dmn%20$term\u0026#34; done dmn=${dmn/\\%20/$nil} dmn=${dmn/\\//$col} dmn=$file$dmn echo \u0026#34;$dmn\u0026#34; echo \u0026#34;Opening $@in Opera\u0026#34; goto $dmn } removebackslash(){ bs=\u0026#34;\\\\\u0026#34; str=${@//$bs/} echo \u0026#34;$str\u0026#34; } \r\r\r\r","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/bash-scripts/for-custom-commands/","summary":"Bash codes for custom commands\ralias goto=\u0026#39;/mnt/c/Program\\ Files/Opera/launcher.exe\u0026#39; #alias search=\u0026#39;goto www.google.com/search?q=\u0026#39; g() { search=\u0026#34;\u0026#34; echo \u0026#34;Googling: $@\u0026#34; for term in $@; do search=\u0026#34;$search%20$term\u0026#34; done search=${search/\\%20/} goto http://www.google.com/search?q=$search } y(){ sea=\u0026#34;\u0026#34; echo \u0026#34;Searching in Youtube: $@\u0026#34; for term in $@; do sea=\u0026#34;$sea+$term\u0026#34; done sea=${sea/\\+/} goto https://www.youtube.com/results?search_query=$sea } alias km=\u0026#39;/mnt/c/Program\\ Files/KMPlayer/KMPlayer.exe\u0026#39; op(){ nil=\u0026#34;\u0026#34; dmn=\u0026#34;\u0026#34; sl=\u0026#34;/\u0026#34; file=\u0026#34;file:///\u0026#34; col=\u0026#34;:/\u0026#34; loc=$(pwd) link=${loc/\\/mnt\\//$nil} base=$(removebackslash $@) for term in $link$sl$base; do dmn=\u0026#34;$dmn%20$term\u0026#34; done dmn=${dmn/\\%20/$nil} dmn=${dmn/\\//$col} dmn=$file$dmn echo \u0026#34;$dmn\u0026#34; echo \u0026#34;Opening $@in Opera\u0026#34; goto $dmn } removebackslash(){ bs=\u0026#34;\\\\\u0026#34; str=${@//$bs/} echo \u0026#34;$str\u0026#34; } \r\r\r\r","tags":null,"title":"Bash codes for custom commands"},{"categories":null,"contents":"Batch script for adding firewall rules\r@echo off REM BATCH FILE CREATED BY CHARLES DE HAVILLAND 10/09/2015 cls net session \u0026gt;nul 2\u0026gt;\u0026amp;1 if %errorLevel% == 0 ( echo. ) else ( GOTO :NOPERM ) SETLOCAL EnableDelayedExpansion for /F \u0026#34;tokens=1,2 delims=#\u0026#34; %%a in (\u0026#39;\u0026#34;prompt #$H#$E# \u0026amp; echo on \u0026amp; for %%b in (1) do rem\u0026#34;\u0026#39;) do ( set \u0026#34;DEL=%%a\u0026#34; ) @cd /d \u0026#34;%~dp0\u0026#34; for %%* in (.) do set RULENAME=%%~nx* ECHO|set /p =\u0026#34;- Add \u0026#34; call :ColorText 0a \u0026#34;Block In \u0026amp; Out \u0026#34; ECHO Firewall rules for all *.exe ^\u0026amp; *.dll files ECHO. ECHO|set /p = \u0026#34;- located at \u0026#39;\u0026#34; call :ColorText 0b \u0026#34;%CD%\u0026#39;\u0026#34; ECHO (inc subfolders) ECHO. ECHO|set /p = \u0026#34;- creating \u0026#34; call :ColorText 1b \u0026#34;%RULENAME%\u0026#34; ECHO as the Firewall rule name ? ECHO. ECHO. ECHO. ECHO Press any key to continue or CTRL+C to terminate now ... pause \u0026gt;nul cls Echo. FOR /r %%G in (\u0026#34;*.exe\u0026#34;) Do (@echo %%G NETSH advfirewall firewall add rule name=\u0026#34;%RULENAME%-%%~nxG\u0026#34; dir=in program=\u0026#34;%%G\u0026#34; action=\u0026#34;block\u0026#34; enable=\u0026#34;yes\u0026#34;) FOR /r %%G in (\u0026#34;*.exe\u0026#34;) Do (@echo %%G NETSH advfirewall firewall add rule name=\u0026#34;%RULENAME%-%%~nxG\u0026#34; dir=out program=\u0026#34;%%G\u0026#34; action=\u0026#34;block\u0026#34; enable=\u0026#34;yes\u0026#34;) FOR /r %%G in (\u0026#34;*.dll\u0026#34;) Do (@echo %%G NETSH advfirewall firewall add rule name=\u0026#34;%RULENAME%-%%~nxG\u0026#34; dir=in program=\u0026#34;%%G\u0026#34; action=\u0026#34;block\u0026#34; enable=\u0026#34;yes\u0026#34;) FOR /r %%G in (\u0026#34;*.dll\u0026#34;) Do (@echo %%G NETSH advfirewall firewall add rule name=\u0026#34;%RULENAME%-%%~nxG\u0026#34; dir=out program=\u0026#34;%%G\u0026#34; action=\u0026#34;block\u0026#34; enable=\u0026#34;yes\u0026#34;) Echo. call :ColorText 0a \u0026#34;done\u0026#34; ECHO|set /p =\u0026#34; ... Goodbye\u0026#34; ECHO. ECHO. ECHO Press a key to exit ... pause \u0026gt;nul goto :eof :ColorText echo off \u0026lt;nul set /p \u0026#34;.=%DEL%\u0026#34; \u0026gt; \u0026#34;%~2\u0026#34; findstr /v /a:%1 /R \u0026#34;^$\u0026#34; \u0026#34;%~2\u0026#34; nul del \u0026#34;%~2\u0026#34; \u0026gt; nul 2\u0026gt;\u0026amp;1 goto :eof :Finish Echo. Echo. Echo Batch ended... Goto :END :NOPERM ECHO. ECHO - You must run this file in Administrator mode ECHO. ECHO. ECHO. ECHO|SET /p =\u0026#34;- Press any key to exit ...\u0026#34; Pause \u0026gt;NUL ECHO goodbye ECHO. ECHO. :END \r\r\r\r","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/batch-scripts/for-adding-firewall-rules/","summary":"Batch script for adding firewall rules\r@echo off REM BATCH FILE CREATED BY CHARLES DE HAVILLAND 10/09/2015 cls net session \u0026gt;nul 2\u0026gt;\u0026amp;1 if %errorLevel% == 0 ( echo. ) else ( GOTO :NOPERM ) SETLOCAL EnableDelayedExpansion for /F \u0026#34;tokens=1,2 delims=#\u0026#34; %%a in (\u0026#39;\u0026#34;prompt #$H#$E# \u0026amp; echo on \u0026amp; for %%b in (1) do rem\u0026#34;\u0026#39;) do ( set \u0026#34;DEL=%%a\u0026#34; ) @cd /d \u0026#34;%~dp0\u0026#34; for %%* in (.) do set RULENAME=%%~nx* ECHO|set /p =\u0026#34;- Add \u0026#34; call :ColorText 0a \u0026#34;Block In \u0026amp; Out \u0026#34; ECHO Firewall rules for all *.","tags":null,"title":"Batch script for adding firewall rules"},{"categories":null,"contents":"Scheme code for creating points and monitors\r;========================================== ; Title: Points and Monitors Generator ; Author: Dhiman Roy, ME-14, BUET ; Date: February 07, 2021 ; Licensed under Creative Commons. ;========================================== (newline) (display \u0026#34;Generating points and creating monitors...\u0026#34;)(newline) (newline) (define avg \u0026#34;Area-Weighted Average\u0026#34;) (define x-cor (list 0.039\t0.042\t0.0457\t0.048\t0.05\t0.053\t0.056\t0.059\t0.062\t0.065\t0.068\t0.071\t0.074\t0.077\t0.08\t0.085\t0.09\t0.095\t0.1\t0.11\t0.12\t0.13\t0.14\t0.15\t0.035\t0.042\t0.0457\t0.048\t0.05\t0.053\t0.056\t0.0589\t0.062\t0.065\t0.068\t0.071\t0.074\t0.077\t0.08\t0.083\t0.086\t0.089\t0.092\t0.095\t0.1\t0.11\t0.12\t0.13\t0.14\t0.15\t0.0457\t0.048\t0.05\t0.053\t0.056\t0.059\t0.062\t0.065\t0.068\t0.071\t0.074\t0.077\t0.08\t0.085\t0.09\t0.0457\t0.048\t0.05\t0.053\t0.056\t0.059\t0.062\t0.065\t0.068\t0.071\t0.074\t0.077\t0.08\t0.085\t0.09\t0.0457\t0.048\t0.05\t0.053\t0.056\t0.059\t0.062\t0.065\t0.068\t0.071\t0.074\t0.077\t0.08\t0.085\t0.09\t0.071\t0.074\t0.077\t0.08\t0.083\t0.086\t0.089\t0.092\t0.095\t0.1\t0.071\t0.074\t0.077\t0.08\t0.083\t0.086\t0.089\t0.092\t0.095\t0.1\t0.071\t0.074\t0.077\t0.08\t0.083\t0.086\t0.089\t0.092\t0.095\t0.1\t0.0457\t0.056\t0.056\t0.068\t0.068\t0.071\t0.071\t0.074\t0.074\t0.077\t0.077\t0.095\t0.095\t0.1\t0.1 )) (define y-cor (list -0.0154\t-0.0167\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.018\t-0.0176\t-0.0167\t-0.0159\t-0.029\t-0.03\t-0.0307\t-0.031\t-0.0315\t-0.032\t-0.0324\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.033\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.019\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.02\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.021\t-0.032\t-0.032\t-0.032\t-0.032\t-0.032\t-0.032\t-0.032\t-0.032\t-0.032\t-0.032\t-0.031\t-0.031\t-0.031\t-0.031\t-0.031\t-0.031\t-0.031\t-0.031\t-0.031\t-0.031\t-0.03\t-0.03\t-0.03\t-0.03\t-0.03\t-0.03\t-0.03\t-0.03\t-0.03\t-0.03\t-0.024\t-0.024\t-0.026\t-0.024\t-0.026\t-0.024\t-0.026\t-0.024\t-0.026\t-0.024\t-0.026\t-0.024\t-0.026\t-0.024\t-0.026 )) ( Do ((i 1 (+ i 1))) ((\u0026gt; i (length x-cor))) (Ti-menu-load-string (format #f \u0026#34;surface/point-surface point_~a_~a ~a ~a\u0026#34; (* 10000 (list-ref x-cor (- i 1))) (* 10000 (list-ref y-cor (- i 1))) (list-ref x-cor (- i 1)) (list-ref y-cor (- i 1)))) (newline) (Ti-menu-load-string (format #f \u0026#34;solve/monitors/surface/set-monitor pressure-monitor-~a avg pressure point_~a_~a () no no yes pres_~a_~a.txt 1 yes flow-time\u0026#34; i (* 10000 (list-ref x-cor (- i 1))) (* 10000 (list-ref y-cor (- i 1))) (* 10000 (list-ref x-cor (- i 1))) (* 10000 (list-ref y-cor (- i 1))))) (newline) (Ti-menu-load-string (format #f \u0026#34;solve/monitors/surface/set-monitor temperature-monitor-~a avg temperature point_~a_~a () no no yes temp_~a_~a.txt 1 yes flow-time\u0026#34; i (* 10000 (list-ref x-cor (- i 1))) (* 10000 (list-ref y-cor (- i 1))) (* 10000 (list-ref x-cor (- i 1))) (* 10000 (list-ref y-cor (- i 1))))) (newline) ;(Ti-menu-load-string (format #f \u0026#34;solve/monitors/surface/set-monitor x-velocity-monitor-~a avg x-velocity point_~a_~a () no no yes xvel_~a_~a.txt 1 yes flow-time\u0026#34; i (* 10000 (list-ref x-cor (- i 1))) (* 10000 (list-ref y-cor (- i 1))) (* 10000 (list-ref x-cor (- i 1))) (* 10000 (list-ref y-cor (- i 1))))) (newline) (Ti-menu-load-string (format #f \u0026#34;solve/monitors/surface/set-monitor y-velocity-monitor-~a avg y-velocity point_~a_~a () no no yes yvel_~a_~a.txt 1 yes flow-time\u0026#34; i (* 10000 (list-ref x-cor (- i 1))) (* 10000 (list-ref y-cor (- i 1))) (* 10000 (list-ref x-cor (- i 1))) (* 10000 (list-ref y-cor (- i 1))))) ) (newline) (newline) ( Do ((i 1 (+ i 1))) ((\u0026gt; i 51)) (display \u0026#34;*\u0026#34;) ) (newline) (display \u0026#34;Points are generated.\u0026#34;)(newline) (display \u0026#34;Monitors are created..\u0026#34;)(newline) (display \u0026#34;Files will be saved in current working directory...\u0026#34;)(newline) ( Do ((i 1 (+ i 1))) ((\u0026gt; i 51)) (display \u0026#34;*\u0026#34;) ) (newline) (newline) \r\r\r\r","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/scheme-codes/for-creating-points-and-monitors/","summary":"Scheme code for creating points and monitors\r;========================================== ; Title: Points and Monitors Generator ; Author: Dhiman Roy, ME-14, BUET ; Date: February 07, 2021 ; Licensed under Creative Commons. ;========================================== (newline) (display \u0026#34;Generating points and creating monitors...\u0026#34;)(newline) (newline) (define avg \u0026#34;Area-Weighted Average\u0026#34;) (define x-cor (list 0.039\t0.042\t0.0457\t0.048\t0.05\t0.053\t0.056\t0.059\t0.062\t0.065\t0.068\t0.071\t0.074\t0.077\t0.08\t0.085\t0.09\t0.095\t0.1\t0.11\t0.12\t0.13\t0.14\t0.15\t0.","tags":null,"title":"Scheme code for creating points and monitors"},{"categories":null,"contents":"Python script for creating Java Script that populates a webform\rThis script reads the obtained marks of the students from an Excel file and creates a Java Script that can be used to populate a certain webform automatically. In short, data entry is not a problem anymore.\n#===================================================================# # Title: JavaScript Maker for Marks input # # Author: Dhiman Roy, Dept. of ME (BUET) # # Date: April 12, 2021 # # Licensed under Creative Commons # #===================================================================# import os import pandas as pd from pathlib import Path os.chdir(os.path.dirname(os.path.abspath(__file__))) try: os.mkdir(\u0026#34;JS\u0026#34;) print(\u0026#34;\\n\\tJS directory is created.\u0026#34;) except IOError: print(\u0026#34;\\n\\tJS directory already exists.\u0026#34;) CURR_DIR = os.getcwd() jsDir = os.path.join(CURR_DIR, \u0026#34;JS\u0026#34;) #print(CURR_DIR) txt_folder = Path(CURR_DIR).rglob(\u0026#39;*.xlsx\u0026#39;) #reads .xlsx files only #print(txt_folder) files = [x for x in txt_folder] #print(files) #print(\u0026#34;\\n\u0026#34;) def midOrall(): value = input(\u0026#34;\\n\\tDo you want script for Mid (m) or All (a)? \u0026#34;) if value == \u0026#39;m\u0026#39; or value == \u0026#39;a\u0026#39;: #print(value) return value else: print(\u0026#34;\\n\\tPlease select one...\u0026#34;) midOrall() def quitOrNot(): quitDmn = input(\u0026#34;\\t\\tDo you want to quit? (Y/N): \u0026#34;) if quitDmn == \u0026#39;y\u0026#39; or quitDmn == \u0026#39;Y\u0026#39; or quitDmn == \u0026#39;yes\u0026#39; or quitDmn == \u0026#39;Yes\u0026#39; or quitDmn == \u0026#39;YES\u0026#39;: quit() elif quitDmn == \u0026#39;n\u0026#39; or quitDmn == \u0026#39;N\u0026#39; or quitDmn == \u0026#39;no\u0026#39; or quitDmn == \u0026#39;No\u0026#39; or quitDmn == \u0026#39;NO\u0026#39;: print() else: quitOrNot() def mustQuit(): input(\u0026#34;\\t\\tHit enter to exit.\u0026#34;) quit() def stringconv(dmnMark, dmnRow, dmnSec, dmnFile, filename): try: return str(int(dmnMark)) except: print(\u0026#34;\\t\\tEmpty cell in SL %i, Sheet name: %s, Workbook: %s\u0026#34; %(dmnRow + 1, dmnSec, dmnFile)) #quitOrNot() file.close() os.remove(filename) mustQuit() if midOrall() == \u0026#39;m\u0026#39;: for name in sorted(files): sheetForSection = pd.ExcelFile(name) section = sheetForSection.sheet_names fName = os.path.basename(name) substring = [\u0026#39;theory\u0026#39;, \u0026#39;THEORY\u0026#39;, \u0026#39;Theory\u0026#39;] theoryfile = [] if substring[0] in os.path.splitext(os.path.basename(name))[0] or substring[1] in os.path.splitext(os.path.basename(name))[0] or substring[2] in os.path.splitext(os.path.basename(name))[0]: header_val = 1 theoryfile.append(os.path.basename(name)) else: header_val = 0 print(\u0026#34;\\n\\tSections from %s\u0026#34; %fName) for sec in section: data = pd.read_excel(name, index_col = 0, usecols = \u0026#34;C:H\u0026#34;, header = header_val, sheet_name = sec) #print(data) print(\u0026#34;\\t-%s\u0026#34; %sec) marks = data.values.tolist() #print(marks) filename = sec + \u0026#34;_\u0026#34; + os.path.splitext(os.path.basename(name))[0] + \u0026#34;.txt\u0026#34; #print(filename) if header_val == 1: file = open(os.path.join(jsDir, filename),\u0026#34;w\u0026#34;) i = 0 for each in marks: if each[3] == \u0026#39;abs\u0026#39;: file.write(\u0026#34;document.getElementById(\u0026#39;midterm_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, each[3])) #mid absent else: file.write(\u0026#34;document.getElementById(\u0026#39;midterm_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, stringconv(each[3], i, sec, fName, filename))) #mid file.write(\u0026#34;calTotal(midterm_%d);\\n\u0026#34; %i) i = i + 1 file.close() else: print(\u0026#34;\\n\\t...Sessionals are skipped...\u0026#34;) else: for name in sorted(files): sheetForSection = pd.ExcelFile(name) section = sheetForSection.sheet_names fName = os.path.basename(name) substring = [\u0026#39;theory\u0026#39;, \u0026#39;THEORY\u0026#39;, \u0026#39;Theory\u0026#39;] theoryfile = [] if substring[0] in os.path.splitext(os.path.basename(name))[0] or substring[1] in os.path.splitext(os.path.basename(name))[0] or substring[2] in os.path.splitext(os.path.basename(name))[0]: header_val = 1 theoryfile.append(os.path.basename(name)) else: header_val = 0 print(\u0026#34;\\n\\tSections from %s\u0026#34; %fName) for sec in section: data = pd.read_excel(name, index_col = 0, usecols = \u0026#34;C:H\u0026#34;, header = header_val, sheet_name = sec) #print(data) print(\u0026#34;\\t-%s\u0026#34; %sec) marks = data.values.tolist() #print(marks) filename = sec + \u0026#34;_\u0026#34; + os.path.splitext(os.path.basename(name))[0] + \u0026#34;.txt\u0026#34; #print(filename) if header_val == 0: file = open(os.path.join(jsDir, filename),\u0026#34;w\u0026#34;) i = 0 for each in marks: file.write(\u0026#34;document.getElementById(\u0026#39;attendance_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, stringconv(each[0], i, sec, fName, filename))) #attendance file.write(\u0026#34;document.getElementById(\u0026#39;performance_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, stringconv(each[1], i, sec, fName, filename))) #classtest if each[2] == \u0026#39;abs\u0026#39;: file.write(\u0026#34;document.getElementById(\u0026#39;sessional_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, each[2])) #sessional final absent else: file.write(\u0026#34;document.getElementById(\u0026#39;sessional_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, stringconv(each[2], i, sec, fName, filename))) #sessoinal final file.write(\u0026#34;calTotal(sessional_%d);\\n\u0026#34; %i) i = i + 1 file.close() else: file = open(filename,\u0026#34;w\u0026#34;) i = 0 for each in marks: file.write(\u0026#34;document.getElementById(\u0026#39;attendance_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, stringconv(each[0], i, sec, fName, filename))) #attendance file.write(\u0026#34;document.getElementById(\u0026#39;classtest_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, stringconv(each[1], i, sec, fName, filename))) #classtest file.write(\u0026#34;document.getElementById(\u0026#39;assignment_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, stringconv(each[2], i, sec, fName, filename))) #assignment if each[4] == \u0026#39;abs\u0026#39;: file.write(\u0026#34;document.getElementById(\u0026#39;final_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, each[4])) #final absent else: file.write(\u0026#34;document.getElementById(\u0026#39;final_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, stringconv(each[4], i, sec, fName, filename))) #final if each[3] == \u0026#39;abs\u0026#39;: file.write(\u0026#34;document.getElementById(\u0026#39;midterm_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, each[3])) #mid absent else: file.write(\u0026#34;document.getElementById(\u0026#39;midterm_%d\u0026#39;).value = \u0026#39;%s\u0026#39;;\\n\u0026#34; %(i, stringconv(each[3], i, sec, fName, filename))) #mid file.write(\u0026#34;calTotal(midterm_%d);\\n\u0026#34; %i) i = i + 1 file.close() print(\u0026#34;\\n\\t\\t====================\u0026#34;) print(\u0026#34;\\t\\tScripts are ready!!!\u0026#34;) print(\u0026#34;\\t\\t====================\u0026#34;) #print(\u0026#34;\\n\u0026#34;) input(\u0026#34;\\n\\t\\tPress enter to exit...\\n\u0026#34;) \r\r\r\r","date":"April 12, 2021","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/python-scripts/for-creating-java-script/","summary":"Python script for creating Java Script that populates a webform\rThis script reads the obtained marks of the students from an Excel file and creates a Java Script that can be used to populate a certain webform automatically. In short, data entry is not a problem anymore.\n#===================================================================# # Title: JavaScript Maker for Marks input # # Author: Dhiman Roy, Dept. of ME (BUET) # # Date: April 12, 2021 # # Licensed under Creative Commons # #===================================================================# import os import pandas as pd from pathlib import Path os.","tags":null,"title":"Python script for creating Java Script that populates a webform"},{"categories":null,"contents":"Python script for making PDF of exam routine and sending it to respective faculty member\rThis script reads exam schedule from an Excel file and creates a pdf that is sent to the respective faculty member. This script helped me a lot while performing as an exam coordinator in Sonargaon University (SU).\n#===================================================================# # Title: PDF Maker for faculties # # Author: Dhiman Roy, Dept. of ME (BUET) # # Date: April 04, 2021 # # Licensed under Creative Commons # #===================================================================# import os os.chdir(os.path.dirname(os.path.abspath(__file__))) import pandas as pd from fpdf import FPDF myFile = \u0026#34;routine.xlsx\u0026#34; data = pd.read_excel(myFile, usecols = [\u0026#34;Sort By\u0026#34;,\u0026#34;Date\u0026#34;,\u0026#34;Day\u0026#34;,\u0026#34;Slot\u0026#34;,\u0026#34;ERP Section Name\u0026#34;,\u0026#34;Course Code\u0026#34;,\u0026#34;Course Title\u0026#34;,\u0026#34;Teacher\u0026#34;,\u0026#34;Designation\u0026#34;,\u0026#34;Class Schedule\u0026#34;], header = 2) teachers = data[\u0026#34;Teacher\u0026#34;].unique().tolist() print(teachers) def makePdf(df, teacher): titles = df.columns.tolist() #print(titles ) dfData = df.values.tolist() dfData.insert(0, titles) #print(dfData[0]) myPdf = FPDF() myPdf.add_page(\u0026#34;L\u0026#34;) myPdf.set_font(\u0026#34;Times\u0026#34;, size = 16) myPdf.cell(0, 10, txt = \u0026#34;Routine for Final Assessment, Spring 21\u0026#34;, ln = 1, align = \u0026#34;C\u0026#34;) myPdf.cell(0, 10, txt = \u0026#34;Department of Mechanical Engineering\u0026#34;, ln = 1, align = \u0026#34;C\u0026#34;) myPdf.cell(0, 10, txt = \u0026#34;Sonargaon University (SU)\u0026#34;, ln = 1, align = \u0026#34;C\u0026#34;) myPdf.set_font(\u0026#34;Times\u0026#34;, size = 10) myPdf.cell(0, 10, txt = \u0026#34;\u0026#34;, ln = 1) myPdf.set_font(\u0026#34;Times\u0026#34;, \u0026#34;I\u0026#34;,size = 12) myPdf.cell(0, 10, txt = \u0026#34;Teacher: \u0026#34; + teacher, align = \u0026#34;L\u0026#34;) myPdf.cell(0, 10, txt = \u0026#34;Designation: \u0026#34; + df[\u0026#34;Designation\u0026#34;].tolist()[0], ln = 1, align = \u0026#34;R\u0026#34;) i=3 for dat in dfData: if i == 3: myPdf.set_font(\u0026#34;Times\u0026#34;, \u0026#34;B\u0026#34;,size = 12) else: myPdf.set_font(\u0026#34;Times\u0026#34;, \u0026#34;\u0026#34;,size = 10) myPdf.cell(25, 10, txt = dat[0], border = 1, align = \u0026#34;C\u0026#34;) myPdf.cell(25, 10, txt = dat[1], border = 1, align = \u0026#34;C\u0026#34;) myPdf.cell(35, 10, txt = dat[2], border = 1, align = \u0026#34;C\u0026#34;) myPdf.cell(25, 10, txt = dat[4], border = 1, align = \u0026#34;C\u0026#34;) myPdf.cell(120, 10, txt = dat[5], border = 1, align = \u0026#34;C\u0026#34;) myPdf.cell(45, 10, txt = dat[3], border = 1, align = \u0026#34;C\u0026#34;, ln = 1) i = i + 1 myPdf.output(teacher + \u0026#34;.pdf\u0026#34;) print(teacher + \u0026#34;.pdf is created.\u0026#34;) i = 1 for tea in teachers: dmnData = data.loc[data.Teacher == tea].sort_values(by = \u0026#34;Sort By\u0026#34;) #filters data using teachers list del dmnData[\u0026#34;Sort By\u0026#34;] dmnData[\u0026#34;Date\u0026#34;] = dmnData[\u0026#34;Date\u0026#34;].dt.strftime(\u0026#34;%B %d, %Y\u0026#34;) #Converts date to string #print(dmnData) makePdf(dmnData, tea) i = i + 1 print(\u0026#34;\\n*******\\nTotal %dfiles are saved.\\n********\\n\u0026#34; %(i-1)) input(\u0026#34;Hit Enter to exit...\u0026#34;) \nThe following script can send the generated pdf files to the respective faculty member.\n#===================================================================# # Title: Email Sender # # Author: Dhiman Roy, Dept. of ME (BUET) # # Date: April 05, 2021 # # Licensed under Creative Commons # #===================================================================# import os os.chdir(os.path.dirname(os.path.abspath(__file__))) import pandas as pd import smtplib from email.message import EmailMessage from email.header import Header from email.utils import formataddr import glob files = glob.glob(\u0026#34;*.pdf\u0026#34;) #reads pdf files only #print(files) log = open(\u0026#34;log.txt\u0026#34;,\u0026#34;w\u0026#34;) log.close() senderName = \u0026#34;Exam Coordination Team, Dept. of ME, SU\u0026#34; senderEmail = \u0026#34;emailaddress@gmail.com\u0026#34; pw = input(\u0026#34;Password: \u0026#34;) with open(\u0026#34;index.html\u0026#34;) as htmlFile: htmlCode = htmlFile.read() htmlCode = htmlCode.split(\u0026#34;Faculties\u0026#34;) def sendEmail(i, tea, mailList): msg = EmailMessage() msg[\u0026#34;Subject\u0026#34;] = \u0026#34;Revised Routine for Final Assessment of Spring 2021\u0026#34; msg[\u0026#34;From\u0026#34;] = formataddr((str(Header(senderName , \u0026#39;utf-8\u0026#39;)), senderEmail)) for mail in mailList: if tea in mail[0]: mailAdd = mail[1] msg[\u0026#34;To\u0026#34;] = mailAdd #print(mailAdd) \u0026#39;\u0026#39;\u0026#39; with open(\u0026#34;messageBody.txt\u0026#34;) as textFile: text = textFile.read() msg.set_content(text) \u0026#39;\u0026#39;\u0026#39; newHtmlCode = htmlCode[0] + tea + htmlCode[1] msg.add_alternative(f\u0026#34;\u0026#34;\u0026#34;\\n\\n{newHtmlCode}\u0026#34;\u0026#34;\u0026#34;, subtype = \u0026#34;html\u0026#34;) with open(tea + \u0026#34;-revised.pdf\u0026#34;,\u0026#34;rb\u0026#34;) as attachment: #pdf files are needed to be ready fileData = attachment.read() fileName = attachment.name msg.add_attachment(fileData, maintype = \u0026#34;application\u0026#34;, subtype = \u0026#34;.pdf\u0026#34;, filename = fileName) \u0026#39;\u0026#39;\u0026#39; try: with open(tea + \u0026#34;.pdf\u0026#34;,\u0026#34;rb\u0026#34;) as attachment: fileData = attachment.read() fileName = attachment.name msg.add_attachment(fileData, maintype = \u0026#34;application\u0026#34;, subtype = \u0026#34;.pdf\u0026#34;, filename = fileName) except IOError: print(\u0026#34;%s.pdf is not found!!!\u0026#34; %tea) \u0026#39;\u0026#39;\u0026#39; with smtplib.SMTP_SSL(\u0026#34;smtp.gmail.com\u0026#34;, 465) as server: server.login(senderEmail,pw) server.send_message(msg) print(\u0026#34;%02d. Successfully sent %s.pdf to %s\u0026#34; %(i, tea, mailAdd)) log.writelines(\u0026#34;%02d. Successfully sent %s.pdf to %s\\n\u0026#34; %(i, tea, mailAdd)) ################## Edit this classRoutine = \u0026#34;ClassRoutine.xlsx\u0026#34; #get mail ids from ################## routine_data = pd.read_excel(classRoutine, usecols = [\u0026#34;Teacher\u0026#34;,\u0026#34;Email\u0026#34;], header = 6) allData = routine_data.values.tolist() ################## edit this myFile = \u0026#34;routine.xlsx\u0026#34; #gets exam routine from ################## data = pd.read_excel(myFile, usecols = [\u0026#34;Teacher\u0026#34;], header = 2) teachers = data[\u0026#34;Teacher\u0026#34;].unique().tolist() #print(teachers) listOfMails=[] teachermails = [] try: for teacher in allData: if teacher[0] in teachers: if teacher[0] not in teachermails: teachermails.append(teacher[0]) listOfMails.append([teacher[0], teacher[1]]) except IOError: print(\u0026#34;listOfMails not complete.\u0026#34;) #print(teachermails) #print(allData) #print(listOfMails) up_teachers = [\u0026#34;Mr. X\u0026#34;, \u0026#34;Dr. Y\u0026#34;] print(\u0026#34;Sending emails. Please wait.\u0026#34;) i = 1 for everyone in up_teachers: log = open(\u0026#34;log.txt\u0026#34;,\u0026#34;a\u0026#34;) try: sendEmail(i, everyone, listOfMails) except IOError: print(\u0026#34;%02d. sendEmail did not run for %s\u0026#34; %(i, everyone)) log.writelines(\u0026#34;%02d. sendEmail did not run for %s\\n\u0026#34; %(i, everyone)) i = i + 1 log.close() input(\u0026#34;Hit Return to exit...\u0026#34;) \r\r\r\r","date":"April 4, 2021","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/python-scripts/for-making-pdf-and-sending-it-to-the-faculty-member/","summary":"Python script for making PDF of exam routine and sending it to respective faculty member\rThis script reads exam schedule from an Excel file and creates a pdf that is sent to the respective faculty member. This script helped me a lot while performing as an exam coordinator in Sonargaon University (SU).\n#===================================================================# # Title: PDF Maker for faculties # # Author: Dhiman Roy, Dept. of ME (BUET) # # Date: April 04, 2021 # # Licensed under Creative Commons # #===================================================================# import os os.","tags":null,"title":"Python script for making PDF of exam routine and sending it to respective faculty member"},{"categories":null,"contents":"Script for decoding Particle History Data (.xml) files (Exported from Ansys FLUENT)\rThis script can read DPM particle history data (.xml files) exported from Ansys FLUENT. It calculated DPM concentration inside a sphere at different times and writes them in a .dat file. For the script, please email me. Demonstration: \r\r\r\r","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/dpm-particle-history-data/","summary":"Script for decoding Particle History Data (.xml) files (Exported from Ansys FLUENT)\rThis script can read DPM particle history data (.xml files) exported from Ansys FLUENT. It calculated DPM concentration inside a sphere at different times and writes them in a .dat file. For the script, please email me. Demonstration: \r\r\r\r","tags":null,"title":"Script for decoding Particle History Data (.xml) files (Exported from Ansys FLUENT)"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"Script for Gauss Elimination method\rThis matlab script can solve a system of linear equations by Gauss elimination method with partial pivoting. Another fun fact is, this script can show the calculation steps. So, this script saves a lot of effort while preparing assignments. \n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Title: Gauss Elimination with partial pivoting % % Author: Dhiman Roy, Dept. of ME (BUET) % % Date: August 23, 2021 % % Licensed under Creative Commons % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% clear; clc; global showSteps; showSteps = true; %can be true or false. true shows calculation steps A = input(\u0026#39;Please Enter the Co-efficient Matrix, A:\\n\u0026#39; ); b = input(\u0026#39;Please Enter the Constants(Must be a column vector, b:\\n\u0026#39;); solByGEPP = gaussElimPartPiv(A, b) function [x] = gaussElimPartPiv(A, b) global showSteps; [m, n] = size(A); if m~=n error(\u0026#34;\u0026#39;A\u0026#39; must be a square matrix.\u0026#34;); else aug = [A b]; if showSteps == 1 fprintf(\u0026#34;Gauss elimination with partial pivoting.\\nAugmented Matrix:\\n\u0026#34;); disp(aug); fprintf(\u0026#34;\\n\u0026#34;); end for k = 1: n-1 %partial pivoting for p = k+1:n if abs(A(k,k) \u0026lt; A(p,k)) aug([k p],:) = aug([p k],:); end end %forward elimination for i = k+1: n if showSteps == 1 fprintf(\u0026#34;Row%d = Row%d - (%0.4f)/(%0.4f) * Row%d\\n\u0026#34;, i, i, aug(i,k), aug(k,k), k); end factor = aug(i,k)/aug(k,k); aug(i,k:n+1) = aug(i,k:n+1)-factor*aug(k,k:n+1); end %display augmented matrix after each step if showSteps == 1 fprintf(\u0026#34;\\n\u0026#34;); disp(aug) fprintf(\u0026#34;\\n\u0026#34;); end end %back substitution x = zeros(n,1); x(n) = aug(n,n+1)/aug(n,n); for i = n-1:-1:1 x(i) = (aug(i,n+1)-aug(i,i+1:n)*x(i+1:n))/aug(i,i); end end end \r\r\r\r","date":"August 23, 2021","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/matlab-scripts/for-solving-system-of-linear-equations/by-gauss-elimination-method/","summary":"Script for Gauss Elimination method\rThis matlab script can solve a system of linear equations by Gauss elimination method with partial pivoting. Another fun fact is, this script can show the calculation steps. So, this script saves a lot of effort while preparing assignments. \n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Title: Gauss Elimination with partial pivoting % % Author: Dhiman Roy, Dept. of ME (BUET) % % Date: August 23, 2021 % % Licensed under Creative Commons % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% clear; clc; global showSteps; showSteps = true; %can be true or false.","tags":null,"title":"Gauss elimination method"},{"categories":null,"contents":"Script for Gauss Jordan method\rThis matlab script can solve a system of linear equations by Gauss Jordan method with partial pivoting. Another fun fact is, this script can show the calculation steps. So, this script saves a lot of effort while preparing assignments. \n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Title: Gauss Elimination with partial pivoting % % Author: Dhiman Roy, Dept. of ME (BUET) % % Date: August 23, 2021 % % Licensed under Creative Commons % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% clear; clc; global showSteps; showSteps = true; %can be true or false. true shows calculation steps A = input(\u0026#39;Please Enter the Co-efficient Matrix, A:\\n\u0026#39; ); b = input(\u0026#39;Please Enter the Constants(Must be a column vector, b:\\n\u0026#39;); solByGJPP = gaussJordanPartPiv(A, b) function [x] = gaussJordanPartPiv(A, b) global showSteps; [m, n] = size(A); if m~=n error(\u0026#34;\u0026#39;A\u0026#39; must be a square matrix.\u0026#34;); else aug = [A b]; if showSteps == 1 fprintf(\u0026#34;Gauss Jordan with partial pivoting.\\nAugmented Matrix:\\n\u0026#34;); disp(aug); fprintf(\u0026#34;\\n\u0026#34;); end for k = 1: n-1 %partial pivoting for p = k+1:n if abs(A(k,k) \u0026lt; A(p,k)) aug([k p],:) = aug([p k],:); end end %forward elimination for i = k+1: n if showSteps == 1 fprintf(\u0026#34;Row%d = Row%d - (%0.4f)/(%0.4f) * Row%d\\n\u0026#34;, i, i, aug(i,k), aug(k,k), k); end factor = aug(i,k)/aug(k,k); aug(i,k:n+1) = aug(i,k:n+1) - factor*aug(k,k:n+1); end %display augmented matrix after each step if showSteps == 1 fprintf(\u0026#34;\\n\u0026#34;); disp(aug); end end %elimination from upper triangular matrix if showSteps == 1 fprintf(\u0026#34;Elimination from upper triangular matrix:\\n\\n\u0026#34;); end for k = n:-1:2 for i = k-1:-1:1 if showSteps == 1 fprintf(\u0026#34;Row%d = Row%d - (%0.4f)/(%0.4f) * Row%d\\n\u0026#34;, i, i, aug(i,k), aug(k,k), k); end factor = aug(i,k)/aug(k,k); aug(i,n+1:-1:i) = aug(i,n+1:-1:i) - factor*aug(k,n+1:-1:i); end if showSteps == 1 fprintf(\u0026#34;\\n\u0026#34;); disp(aug) end end %converting to Identity Matrix for i = 1:n aug(i,:) = aug(i,:)/aug(i,i); end if showSteps == 1 fprintf(\u0026#34;\\nFinal form of the augmented matrix:\\n\\n\u0026#34;); disp(aug); fprintf(\u0026#34;\\n\u0026#34;); end end x = aug(:,n+1); end \r\r\r\r","date":"August 23, 2021","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/matlab-scripts/for-solving-system-of-linear-equations/by-gauss-jordan-method/","summary":"Script for Gauss Jordan method\rThis matlab script can solve a system of linear equations by Gauss Jordan method with partial pivoting. Another fun fact is, this script can show the calculation steps. So, this script saves a lot of effort while preparing assignments. \n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Title: Gauss Elimination with partial pivoting % % Author: Dhiman Roy, Dept. of ME (BUET) % % Date: August 23, 2021 % % Licensed under Creative Commons % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% clear; clc; global showSteps; showSteps = true; %can be true or false.","tags":null,"title":"Gauss Jordan method"},{"categories":null,"contents":"test\n","date":"August 23, 2021","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/matlab-scripts/for-solving-system-of-linear-equations/by-gauss-seidel-method/","summary":"test","tags":null,"title":"Gauss Seidel method"},{"categories":null,"contents":"test\n","date":"August 23, 2021","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/matlab-scripts/for-solving-system-of-linear-equations/by-jacobi-method/","summary":"test","tags":null,"title":"Jacobi method"},{"categories":null,"contents":"test\n","date":"August 23, 2021","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/matlab-scripts/for-solving-system-of-linear-equations/by-successive-over-relaxation-method/","summary":"test","tags":null,"title":"Successive Over Relaxation method"},{"categories":null,"contents":"Scheme code for extacting xy plot data\r;========================================== ; Title: Data Extract for XY plots ; Author: Dhiman Roy, ME-14, BUET ; Date: February 08, 2021 ; Licensed under Creative Commons. ;========================================== (newline) (display \u0026#34;Generating VERTICAL LINES...\u0026#34;)(newline) (newline) ;(define avg \u0026#34;Area-Weighted Average\u0026#34;) (define ramp_x-cor (list 0.060 0.070)) (define ramp_y_1-cor (list -0.018 -0.018)) (define ramp_y_2-cor (list -0.033 -0.033)) (define lip_x-cor (list 0.060 0.070)) (define lip_y_1-cor (list -0.018 -0.018)) (define lip_y_2-cor (list -0.033 -0.033)) ( Do ((i 1 (+ i 1))) ((\u0026gt; i (length ramp_x-cor))) (Ti-menu-load-string (format #f \u0026#34;surface/line-surface line_ramp_~a ~a ~a ~a ~a\u0026#34; i (list-ref ramp_x-cor (- i 1)) (list-ref ramp_y_1-cor (- i 1)) (list-ref ramp_x-cor (- i 1)) (list-ref ramp_y_2-cor (- i 1)))) (newline) (Ti-menu-load-string (format #f \u0026#34;plot/plot yes ramp_x-vel_~a.dat no yes 0 1 no no x-velocity line_ramp_~a ()\u0026#34; (* 10000 (list-ref ramp_x-cor (- i 1))) i)) (Ti-menu-load-string (format #f \u0026#34;plot/plot yes ramp_temp_~a.dat no yes 0 1 no no temperature line_ramp_~a ()\u0026#34; (* 10000 (list-ref ramp_x-cor (- i 1))) i)) ) (newline) (newline) ( Do ((i 1 (+ i 1))) ((\u0026gt; i (length lip_x-cor))) (Ti-menu-load-string (format #f \u0026#34;surface/line-surface line_lip_~a ~a ~a ~a ~a\u0026#34; i (list-ref lip_x-cor (- i 1)) (list-ref lip_y_1-cor (- i 1)) (list-ref lip_x-cor (- i 1)) (list-ref lip_y_2-cor (- i 1)))) (newline) (Ti-menu-load-string (format #f \u0026#34;plot/plot yes lip_x-vel_~a.dat no yes 0 1 no no x-velocity line_lip_~a ()\u0026#34; (* 10000 (list-ref lip_x-cor (- i 1))) i)) ) (newline) (newline) ( Do ((i 1 (+ i 1))) ((\u0026gt; i 51)) (display \u0026#34;*\u0026#34;) ) (newline) (display \u0026#34;Vertical lines are generated.\u0026#34;)(newline) ;(display \u0026#34;Monitors are created..\u0026#34;)(newline) (display \u0026#34;Files are saved in current working directory...\u0026#34;)(newline) ( Do ((i 1 (+ i 1))) ((\u0026gt; i 51)) (display \u0026#34;*\u0026#34;) ) (newline) (newline) \r\r\r\r","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/codes/scheme-codes/for-extacting-xy-plot-data/","summary":"Scheme code for extacting xy plot data\r;========================================== ; Title: Data Extract for XY plots ; Author: Dhiman Roy, ME-14, BUET ; Date: February 08, 2021 ; Licensed under Creative Commons. ;========================================== (newline) (display \u0026#34;Generating VERTICAL LINES...\u0026#34;)(newline) (newline) ;(define avg \u0026#34;Area-Weighted Average\u0026#34;) (define ramp_x-cor (list 0.060 0.070)) (define ramp_y_1-cor (list -0.018 -0.018)) (define ramp_y_2-cor (list -0.033 -0.033)) (define lip_x-cor (list 0.060 0.070)) (define lip_y_1-cor (list -0.018 -0.018)) (define lip_y_2-cor (list -0.","tags":null,"title":"Scheme code for extacting xy plot data"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://dhimanroy.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"}]